//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\amaur\Documents\Compiladores I\PruebasProyecto\Prueba3\antlrGrammar\tiny.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ItinyListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class tinyBaseListener : ItinyListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParse([NotNull] tinyParser.ParseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParse([NotNull] tinyParser.ParseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] tinyParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] tinyParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.lista_declaracion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLista_declaracion([NotNull] tinyParser.Lista_declaracionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.lista_declaracion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLista_declaracion([NotNull] tinyParser.Lista_declaracionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.declaracion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracion([NotNull] tinyParser.DeclaracionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.declaracion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracion([NotNull] tinyParser.DeclaracionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.lista_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLista_id([NotNull] tinyParser.Lista_idContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.lista_id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLista_id([NotNull] tinyParser.Lista_idContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.lista_sentencias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLista_sentencias([NotNull] tinyParser.Lista_sentenciasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.lista_sentencias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLista_sentencias([NotNull] tinyParser.Lista_sentenciasContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.sentencia"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSentencia([NotNull] tinyParser.SentenciaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.sentencia"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSentencia([NotNull] tinyParser.SentenciaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.seleccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeleccion([NotNull] tinyParser.SeleccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.seleccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeleccion([NotNull] tinyParser.SeleccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.iteracion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIteracion([NotNull] tinyParser.IteracionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.iteracion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIteracion([NotNull] tinyParser.IteracionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.repeticion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRepeticion([NotNull] tinyParser.RepeticionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.repeticion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRepeticion([NotNull] tinyParser.RepeticionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.sent_read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSent_read([NotNull] tinyParser.Sent_readContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.sent_read"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSent_read([NotNull] tinyParser.Sent_readContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.sent_write"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSent_write([NotNull] tinyParser.Sent_writeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.sent_write"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSent_write([NotNull] tinyParser.Sent_writeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.bloque"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBloque([NotNull] tinyParser.BloqueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.bloque"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBloque([NotNull] tinyParser.BloqueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsignacion([NotNull] tinyParser.AsignacionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsignacion([NotNull] tinyParser.AsignacionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.b_expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterB_expresion([NotNull] tinyParser.B_expresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.b_expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitB_expresion([NotNull] tinyParser.B_expresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.b_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterB_term([NotNull] tinyParser.B_termContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.b_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitB_term([NotNull] tinyParser.B_termContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.not_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNot_factor([NotNull] tinyParser.Not_factorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.not_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNot_factor([NotNull] tinyParser.Not_factorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.b_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterB_factor([NotNull] tinyParser.B_factorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.b_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitB_factor([NotNull] tinyParser.B_factorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.relacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelacion([NotNull] tinyParser.RelacionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.relacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelacion([NotNull] tinyParser.RelacionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpresion([NotNull] tinyParser.ExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpresion([NotNull] tinyParser.ExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.termino"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermino([NotNull] tinyParser.TerminoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.termino"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermino([NotNull] tinyParser.TerminoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.signoFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignoFactor([NotNull] tinyParser.SignoFactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.signoFactor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignoFactor([NotNull] tinyParser.SignoFactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] tinyParser.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] tinyParser.FactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.sumaOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSumaOp([NotNull] tinyParser.SumaOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.sumaOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSumaOp([NotNull] tinyParser.SumaOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="tinyParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultOp([NotNull] tinyParser.MultOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="tinyParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultOp([NotNull] tinyParser.MultOpContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
